name: Deploy to Production

on:
  release:
    types: [prereleased]

jobs:
  push-to-repository:
    strategy:
      fail-fast: false
    uses: ./.github/workflows/push-to-repository.yml
    with:
      env-upper: PRODUCTION
      env-lower: production
      triggered: true
      zip-name: ${{ github.event.repository.name }}.zip
      repository-name: ${{ github.event.repository.name }}
    secrets: inherit

  update-release:
    name: PRODUCTION - Update release
    needs: push-to-repository
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    env:
      ZIP_NAME: ${{ github.event.repository.name }}.zip

    steps:
      - name: Download artifact üöö
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}

      - name: Prepare zip for release üë∑
        run: |
          cd ${{ github.event.repository.name }}
          zip -r ../${{ env.ZIP_NAME }} . -x '*.DS_Store*' '*.git*' '*/.php_cs.*' '*__MACOSX*' '*/node_modules' '*/.npmrc' '*/composer.*' '*/package.*' '*/.editorconfig' '*_dev*' '*test*' '*/tests/*' '*/Test/*' '*/Tests/*' '*/gha-creds-*.json'

      - name: Publish to GitHub Release üõ©Ô∏è
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
