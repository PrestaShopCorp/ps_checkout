name: PrestaShop 1.7 - Deployment

on:
  pull_request:
    types: [opened, reopened, synchronize, edited, labeled]
  push:
    tags:
      - "v7.*"
    branches:
      - "prestashop/1.7.x"

env:
  ZIP_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    name: Build dependencies & create artifact
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        env:
          - upper: INTEGRATION
            lower: integration
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'integration deployment') }}
          - upper: PREPRODUCTION
            lower: preproduction
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'preproduction deployment') }}
          - upper: PRODUCTION
            lower: production
            triggered: ${{ github.event_name == 'push' }}

    steps:
      - name: Test
        run: |
          echo 'env : ' $env
          echo 'format : ' $format
          echo 'Provider : ' $PROVIDER
          echo 'SA : ' $SA
          echo 'GCP Project : ' $GCP_PROJECT
          echo 'Test : ' $TEST
        env:
          TEST: test
          env: ${{ matrix.env.upper }}
          format: ${{ format('WI_PROVIDER_V2_{0}', matrix.env.upper) }}
          PROVIDER: ${{ secrets[format('WI_PROVIDER_V2_{0}', matrix.env.upper)] }}
          SA: ${{ secrets[format('WI_SA_V2_{0}', matrix.env.upper)] }}
          GCP_PROJECT: ${{ secrets[format('GCP_PROJECT_{0}', matrix.env.upper)] }}

  build-matrix:
    name: ${{ matrix.env.upper }} - Build
    strategy:
      fail-fast: false
      matrix:
        env:
          - upper: INTEGRATION
            lower: integration
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'integration deployment') }}
          - upper: PREPRODUCTION
            lower: preproduction
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'preproduction deployment') }}
          - upper: PRODUCTION
            lower: production
            triggered: ${{ github.event_name == 'push' }}
    uses: ./.github/workflows/build.yml
    with:
      env-upper: ${{ matrix.env.upper }}
      env-lower: ${{ matrix.env.lower }}
      triggered: ${{ matrix.env.triggered }}
    secrets: inherit

  push-to-bucket-matrix:
    name: ${{ matrix.env.upper }} - Push to GCP bucket storage
    needs: [build-matrix]
    strategy:
      fail-fast: false
      matrix:
        env:
          - lower: integration
            upper: INTEGRATION
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'integration deployment') }}
          - lower: preproduction
            upper: PREPRODUCTION
            triggered: ${{ contains(github.event.pull_request.labels.*.name, 'preproduction deployment') }}
    uses: ./.github/workflows/push-to-bucket.yml
    with:
      env-upper: ${{ matrix.env.upper }}
      env-lower: ${{ matrix.env.lower }}
      triggered: ${{ matrix.env.triggered }}
      zip-name: ${{ github.event.repository.name }}-${{ matrix.env.lower }}-pr${{ github.event.number }}
    secrets: inherit

  push-to-repository:
    name: PRODUCTION - Push to GitHub repository
    needs: [build-matrix]
    uses: ./.github/workflows/push-to-repository.yml
    with:
      triggered: ${{ github.event_name == 'push' }}
      repository-name: ${{ github.event.repository.name }}
    secrets: inherit

  update-release-draft:
    name: PRODUCTION - Update release draft
    needs: [push-to-repository]
    uses: ./.github/workflows/update-release-draft.yml
    with:
      triggered: ${{ github.event_name == 'push' }}
      repository-name: ${{ github.event.repository.name }}
    secrets: inherit
